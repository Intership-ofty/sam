services:
  backend:
    build:
      context: ../..
      dockerfile: backend/Dockerfile
    image: ${REGISTRY:-local}/sam-backend:${TAG:-dev}
    env_file:
      - ./common.env
    environment:
      - UVICORN_WORKERS=2
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak-checker:
        condition: service_completed_successfully
    networks:
      - sam
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-sam}
      - POSTGRES_USER=${POSTGRES_USER:-sam}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sam}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - sam
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sam} -d ${POSTGRES_DB:-sam}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7-alpine
    networks:
      - sam
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: keycloak
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=localhost
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
    ports:
      - "8081:8080"
    networks:
      - sam
    volumes:
      - ./towerco-realm.json:/opt/keycloak/data/import/realm.json
  keycloak-checker:
    image: curlimages/curl:latest
    depends_on:
      - keycloak
    command: >
      sh -c "
        echo 'Waiting for Keycloak to start...';
        sleep 10;
        echo 'Waiting for Keycloak realm to be ready...';
        until curl -f -s http://keycloak:8080/realms/towerco/.well-known/openid-configuration > /dev/null 2>&1; do
          echo 'Keycloak realm not ready yet, sleeping for 5s...';
          sleep 5;
        done;
        echo 'Keycloak realm is ready!';
        exit 0;
      "
    networks:
      - sam
    restart: "no"

networks:
  sam:

volumes:
  pgdata: