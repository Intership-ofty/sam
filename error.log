docker compose -f deploy/compose/compose.backend.yml -f deploy/compose/compose.workers.yml -f deploy/compose/compose.client-portal.yml -f deploy/compose/compose.frontend.yml -f deploy/compose/compose.observability.yml up --build
Compose can now delegate builds to bake for better performance.
 To do so, set COMPOSE_BAKE=true.
[+] Building 194.2s (46/46) FINISHED                                                                                                         docker:default
 => [frontend internal] load build definition from Dockerfile                                                                                          0.2s
 => => transferring dockerfile: 170B                                                                                                                   0.1s
 => [backend internal] load build definition from Dockerfile                                                                                           0.2s
 => => transferring dockerfile: 781B                                                                                                                   0.0s
 => [client-portal internal] load metadata for docker.io/library/nginx:1.27-alpine                                                                     0.7s
 => [workers internal] load metadata for docker.io/library/python:3.11-slim                                                                            2.1s
 => [frontend internal] load .dockerignore                                                                                                             0.1s
 => => transferring context: 153B                                                                                                                      0.0s
 => CACHED [client-portal stage-1 1/3] FROM docker.io/library/nginx:1.27-alpine@sha256:65645c7bb6a0661892a8b03b89d0743208a18dd2f3f17a54ef4b76fb8e2f2a  0.0s
 => [frontend internal] load build context                                                                                                             0.3s
 => => transferring context: 23.01kB                                                                                                                   0.1s
 => [backend internal] load .dockerignore                                                                                                              0.1s
 => => transferring context: 153B                                                                                                                      0.0s
 => CACHED [frontend 2/3] COPY frontend /usr/share/nginx/html                                                                                          0.0s
 => CACHED [frontend 3/3] COPY deploy/nginx/default.conf /etc/nginx/conf.d/default.conf                                                                0.0s
 => [frontend] exporting to image                                                                                                                      0.1s
 => => exporting layers                                                                                                                                0.0s
 => => writing image sha256:9151dbc483d13eda0298fd33dfa1a245d57a84f7f696609bc48a49fb3a97831e                                                           0.0s
 => => naming to docker.io/local/sam-frontend:dev                                                                                                      0.0s
 => [workers 1/6] FROM docker.io/library/python:3.11-slim@sha256:1d6131b5d479888b43200645e03a78443c7157efbdb730e6b48129740727c312                      0.0s
 => [backend internal] load build context                                                                                                              0.1s
 => => transferring context: 9.85kB                                                                                                                    0.1s
 => CACHED [workers 2/6] WORKDIR /app                                                                                                                  0.0s
 => CACHED [backend 3/8] RUN apt-get update && apt-get install -y     gcc     g++     libpq-dev     curl     && rm -rf /var/lib/apt/lists/*            0.0s
 => CACHED [backend 4/8] COPY backend/requirements.txt .                                                                                               0.0s
 => CACHED [backend 5/8] RUN pip install --no-cache-dir -r requirements.txt                                                                            0.0s
 => [backend 6/8] COPY . .                                                                                                                             0.5s
 => [frontend] resolving provenance for metadata file                                                                                                  0.0s
 => [backend 7/8] RUN useradd -m -u 1000 towerco && chown -R towerco:towerco /app                                                                      3.9s
 => [backend 8/8] RUN pip check                                                                                                                        5.2s
 => [backend] exporting to image                                                                                                                       0.6s
 => => exporting layers                                                                                                                                0.3s
 => => writing image sha256:ffde6b422383e0f4d942b6926c31752fb973b9dd660d85c4c51b8af48b67545f                                                           0.1s
 => => naming to docker.io/local/sam-backend:dev                                                                                                       0.1s
 => [backend] resolving provenance for metadata file                                                                                                   0.1s
 => [workers internal] load build definition from Dockerfile                                                                                           0.0s
 => => transferring dockerfile: 716B                                                                                                                   0.0s
 => [client-portal internal] load build definition from Dockerfile                                                                                     0.0s
 => => transferring dockerfile: 1.04kB                                                                                                                 0.0s
 => [client-portal internal] load metadata for docker.io/library/node:20-alpine                                                                        1.1s
 => [client-portal internal] load .dockerignore                                                                                                        0.0s
 => => transferring context: 153B                                                                                                                      0.0s
 => [workers internal] load .dockerignore                                                                                                              0.1s
 => => transferring context: 153B                                                                                                                      0.0s
 => [client-portal build 1/6] FROM docker.io/library/node:20-alpine@sha256:df02558528d3d3d0d621f112e232611aecfee7cbc654f6b375765f72bb262799            0.0s
 => [client-portal internal] load build context                                                                                                        0.1s
 => => transferring context: 18.81kB                                                                                                                   0.1s
 => [workers internal] load build context                                                                                                              0.1s
 => => transferring context: 1.25kB                                                                                                                    0.1s
 => CACHED [client-portal build 2/6] WORKDIR /app                                                                                                      0.0s
 => [client-portal build 3/6] COPY client-portal ./                                                                                                    0.3s
 => CACHED [workers 3/6] RUN apt-get update && apt-get install -y --no-install-recommends     gcc g++ libpq-dev curl     && rm -rf /var/lib/apt/lists  0.0s
 => CACHED [workers 4/6] COPY workers/requirements.txt workers/requirements.txt                                                                        0.0s
 => [workers 5/6] RUN pip install --no-cache-dir -r workers/requirements.txt                                                                         168.0s
 => [client-portal build 4/6] RUN if [ ! -f package.json ]; then       echo '{ "name":"client-portal","version":"0.1.0","private":true, "type":"modul  0.9s
 => [client-portal build 5/6] RUN npm ci || npm i                                                                                                     67.2s
 => [client-portal build 6/6] RUN npm run build                                                                                                       34.7s
 => [client-portal stage-1 2/3] COPY --from=build /app/dist /usr/share/nginx/html                                                                      0.1s
 => [client-portal stage-1 3/3] COPY deploy/nginx/default.conf /etc/nginx/conf.d/default.conf                                                          0.3s
 => [client-portal] exporting to image                                                                                                                 0.3s
 => => exporting layers                                                                                                                                0.2s
 => => writing image sha256:1f7c207891e0213a9cbe06348a618f53a0b382c2ba1520c946051e7f87362bba                                                           0.0s
 => => naming to docker.io/local/sam-client-portal:dev                                                                                                 0.0s
 => [client-portal] resolving provenance for metadata file                                                                                             0.2s
 => [workers 6/6] COPY workers/ ./workers/                                                                                                             0.4s
 => [workers] exporting to image                                                                                                                      12.1s
 => => exporting layers                                                                                                                               12.0s
 => => writing image sha256:d552a5e3b8caec734b490f11ef6c3d36f2a32cf810753c0ab0319bad4b04a45e                                                           0.0s
 => => naming to docker.io/local/sam-workers:dev                                                                                                       0.0s
 => [workers] resolving provenance for metadata file                                                                                                   0.1s
[+] Running 16/16
 ✔ backend                            Built                                                                                                            0.0s
 ✔ client-portal                      Built                                                                                                            0.0s
 ✔ frontend                           Built                                                                                                            0.0s
 ✔ workers                            Built                                                                                                            0.0s
 ✔ Network compose_sam                Created                                                                                                          0.3s
 ✔ Volume "compose_pgdata"            Created                                                                                                          0.0s
 ✔ Container compose-prometheus-1     Created                                                                                                          1.1s
 ✔ Container compose-redis-1          Created                                                                                                          1.0s
 ✔ Container compose-zookeeper-1      Created                                                                                                          0.9s
 ✔ Container compose-grafana-1        Created                                                                                                          1.1s
 ✔ Container compose-kafka-1          Created                                                                                                          0.9s
 ✔ Container compose-frontend-1       Created                                                                                                          0.9s
 ✔ Container compose-postgres-1       Created                                                                                                          1.0s
 ✔ Container compose-backend-1        Created                                                                                                          0.2s
 ✔ Container compose-workers-1        Created                                                                                                          0.4s
 ✔ Container compose-client-portal-1  Created                                                                                                          0.2s
Attaching to backend-1, client-portal-1, frontend-1, grafana-1, kafka-1, postgres-1, prometheus-1, redis-1, workers-1, zookeeper-1
frontend-1       | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
frontend-1       | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
frontend-1       | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
frontend-1       | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
frontend-1       | 10-listen-on-ipv6-by-default.sh: info: /etc/nginx/conf.d/default.conf differs from the packaged version
frontend-1       | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
frontend-1       | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
frontend-1       | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
frontend-1       | /docker-entrypoint.sh: Configuration complete; ready for start up
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: using the "epoll" event method
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: nginx/1.27.5
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: built by gcc 14.2.0 (Alpine 14.2.0)
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: OS: Linux 5.14.0-503.19.1.el9_5.x86_64
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1073741816:1073741816
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: start worker processes
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: start worker process 28
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: start worker process 29
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: start worker process 30
frontend-1       | 2025/08/28 15:23:33 [notice] 1#1: start worker process 31
zookeeper-1      | zookeeper 15:23:36.53 INFO  ==>
zookeeper-1      | zookeeper 15:23:36.61 INFO  ==> Welcome to the Bitnami zookeeper container
zookeeper-1      | zookeeper 15:23:36.62 INFO  ==> Subscribe to project updates by watching https://github.com/bitnami/containers
zookeeper-1      | zookeeper 15:23:36.62 INFO  ==> NOTICE: Starting August 28th, 2025, only a limited subset of images/charts will remain available for free. Backup will be available for some time at the 'Bitnami Legacy' repository. More info at https://github.com/bitnami/containers/issues/83267
zookeeper-1      | zookeeper 15:23:36.62 INFO  ==>
zookeeper-1      | zookeeper 15:23:36.86 INFO  ==> ** Starting ZooKeeper setup **
zookeeper-1      | zookeeper 15:23:37.02 WARN  ==> You have set the environment variable ALLOW_ANONYMOUS_LOGIN=yes. For safety reasons, do not use this flag in a production environment.
redis-1          | 1:C 28 Aug 2025 15:23:37.052 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis-1          | 1:C 28 Aug 2025 15:23:37.109 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis-1          | 1:C 28 Aug 2025 15:23:37.109 * Redis version=7.4.5, bits=64, commit=00000000, modified=0, pid=1, just started
redis-1          | 1:C 28 Aug 2025 15:23:37.109 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
redis-1          | 1:M 28 Aug 2025 15:23:37.110 * monotonic clock: POSIX clock_gettime
redis-1          | 1:M 28 Aug 2025 15:23:37.154 * Running mode=standalone, port=6379.
redis-1          | 1:M 28 Aug 2025 15:23:37.158 * Server initialized
zookeeper-1      | zookeeper 15:23:37.16 INFO  ==> Initializing ZooKeeper...
zookeeper-1      | zookeeper 15:23:37.17 INFO  ==> No injected configuration file found, creating default config files...
redis-1          | 1:M 28 Aug 2025 15:23:37.197 * Ready to accept connections tcp
kafka-1          | kafka 15:23:37.48 INFO  ==>
kafka-1          | kafka 15:23:37.50 INFO  ==> Welcome to the Bitnami kafka container
kafka-1          | kafka 15:23:37.51 INFO  ==> Subscribe to project updates by watching https://github.com/bitnami/containers
kafka-1          | kafka 15:23:37.52 INFO  ==> Submit issues and feature requests at https://github.com/bitnami/containers/issues
kafka-1          | kafka 15:23:37.57 INFO  ==> Upgrade to Tanzu Application Catalog for production environments to access custom-configured and pre-packaged software components. Gain enhanced features, including Software Bill of Materials (SBOM), CVE scan result reports, and VEX documents. To learn more, visit https://bitnami.com/enterprise
kafka-1          | kafka 15:23:37.59 INFO  ==>
kafka-1          | kafka 15:23:37.69 INFO  ==> ** Starting Kafka setup **
zookeeper-1      | zookeeper 15:23:38.31 INFO  ==> No additional servers were specified. ZooKeeper will run in standalone mode...
postgres-1       | The files belonging to this database system will be owned by user "postgres".
postgres-1       | This user must also own the server process.
postgres-1       |
postgres-1       | The database cluster will be initialized with locale "en_US.utf8".
postgres-1       | The default database encoding has accordingly been set to "UTF8".
postgres-1       | The default text search configuration will be set to "english".
postgres-1       |
postgres-1       | Data page checksums are disabled.
postgres-1       |
postgres-1       | fixing permissions on existing directory /var/lib/postgresql/data ... ok
postgres-1       | creating subdirectories ... ok
postgres-1       | selecting dynamic shared memory implementation ... posix
zookeeper-1      | zookeeper 15:23:38.45 INFO  ==> Deploying ZooKeeper from scratch...
zookeeper-1      | zookeeper 15:23:38.46 INFO  ==> ** ZooKeeper setup finished! **
zookeeper-1      |
Gracefully stopping... (press Ctrl+C again to force)
Error response from daemon: failed to set up container networking: driver failed programming external connectivity on endpoint compose-grafana-1 (c30add178704f1fb45aae6c5d60049a4f340b237b3dc8d86d8c2ea15ec3eab5e): Bind for 0.0.0.0:3000 failed: port is already allocated